{"version":3,"sources":["src/screens/NotFoundScreen.tsx","src/constants/Colors.ts","src/components/Themed.tsx","src/components/TitleComponent.tsx","src/components/ButtonComponent.tsx","src/components/PickerComponent.tsx","src/components/TextInputComponent.tsx","src/components/TitleSectionComponent.tsx","src/components/RadioFormComponent.tsx","src/screens/TabOneScreen.tsx","src/components/StyledText.tsx","src/components/EditScreenInfo.tsx","src/screens/TabTwoScreen.tsx","src/screens/TabSuccessScreen.tsx","src/components/SwitchItemComponent.tsx","src/screens/TabHomeScreen.tsx","src/navigation/BottomTabNavigator.tsx","src/navigation/LinkingConfiguration.ts","src/navigation/index.tsx","App.tsx","src/hooks/useCachedResources.ts","src/hooks/useColorScheme.web.ts","assets/fonts/OpenSans-Bold.ttf","assets/fonts/OpenSans-BoldItalic.ttf","assets/fonts/OpenSans-ExtraBold.ttf","assets/fonts/OpenSans-ExtraBoldItalic.ttf","assets/fonts/OpenSans-Italic.ttf","assets/fonts/OpenSans-Light.ttf","assets/fonts/OpenSans-LightItalic.ttf","assets/fonts/OpenSans-Regular.ttf","assets/fonts/OpenSans-Semibold.ttf","assets/fonts/OpenSans-SemiboldItalic.ttf"],"names":["NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","light","text","background","tint","tabIconDefault","tabIconSelected","borderColor","dark","useThemeColor","props","colorName","colorFromProps","Colors","StatusBar","barStyle","lightColor","darkColor","otherProps","TextInput","PickerSelect","inputAndroid","inputIOS","inputWeb","Switch","tintColor","trackColor","false","true","TitleComponent","this","styleContainer","textTitlePrimary","textTitle","titlePrimary","description","textDescription","Component","fontFamily","paddingTop","ButtonComponent","state","width","height","TouchableWithoutFeedback","handleOnPress","paddingHorizontal","undefined","onLayout","event","nativeEvent","layout","setState","alignContent","textAlign","borderRadius","PickerComponent","onValueChange","value","handleOnValueChange","items","inputAndroidContainer","inputIOSContainer","borderWidth","TextInputComponent","placeholder","keyboardType","position","onChangeText","handleOnChangeText","top","left","TitleSectionComponent","RadioFormComponent","radioButton","radioButtonActive","flexDirection","marginLeft","textLink","textDecorationLine","TabOneScreen","form","type","document","firstName","lastName","thirdName","date","gender","secure","ScrollView","rowWrapper","key","label","toString","filter","match","length","test","columnWrapper","ButtonComponentWrapper","navigate","alignSelf","MonoText","EditScreenInfo","path","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","WebBrowser","developmentModeText","marginBottom","lineHeight","contentContainer","welcomeContainer","welcomeImage","resizeMode","marginHorizontal","marginVertical","codeHighlightText","TabTwoScreen","separator","TabSuccessScreen","SwitchItemComponent","switch","data","map","item","index","Linking","openURL","TabHomeScreen","phone","politic","message","translucent","BottomTab","createBottomTabNavigator","BottomTabNavigator","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","name","component","TabHomeNavigator","options","tabBarIcon","TabBarIcon","TabOneNavigator","TabTwoNavigator","TabSuccessNavigator","Ionicons","size","TabHomeStack","createStackNavigator","screenOptions","headerShown","headerTransparent","headerTitle","TabOneStack","TabTwoStack","TabSuccessStack","prefixes","config","screens","Root","TabHome","TabOne","TabTwo","TabSuccess","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","App","isLoadingComplete","React","setLoadingComplete","a","async","SplashScreen","Font","font","require","console","warn","useCachedResources","useState","containerWidth","setContainerWidth","Platform","OS","maxWidth","module","exports"],"mappings":"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","file":"static/js/app.e586aead.chunk.js","sourcesContent":["import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","const tintColorLight = '#2f80ed'\nconst tintColorDark = '#fff'\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    borderColor: '#ccc'\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    borderColor: '#ccc'\n  }\n}\n","import React, { useRef } from 'react';\nimport {\n  Text as DefaultText,\n  View as DefaultView,\n  TextInput as DefaultTextInput,\n  StatusBar as DefaultStatusBar,\n  Switch as DefaultSwitch\n} from 'react-native';\nimport RNPickerSelect from 'react-native-picker-select';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type StatusBarProps = ThemeProps & DefaultStatusBar['props'];\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\nexport type TextInputProps = ThemeProps & DefaultTextInput['props'];\nexport type PickerSelectProps = ThemeProps & RNPickerSelect['props'];\nexport type SwitchProps = ThemeProps & DefaultSwitch['props'];\n\nexport function StatusBar(props: StatusBarProps) {\n  const { barStyle, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultStatusBar barStyle={barStyle} {...otherProps} />;\n}\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n\nexport function TextInput(props: TextInputProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultTextInput style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n\nexport function PickerSelect(props: PickerSelectProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <RNPickerSelect style={{ inputAndroid: { backgroundColor, color }, inputIOS: { backgroundColor, color }, inputWeb: { backgroundColor, color }, ...style }} {...otherProps} />;\n}\n\nexport function Switch(props: SwitchProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const tintColor = useThemeColor({ light: lightColor, dark: darkColor }, 'tint');\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultSwitch trackColor={{ false: backgroundColor, true: tintColor }} style={[style]} {...otherProps} />;\n}","import React, { Component } from 'react'\nimport { StyleSheet, TouchableOpacity } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View } from './Themed'\n\nexport interface Props { \n  title: string\n  titlePrimary?: string\n  description?: string\n  styleContainer?: object\n}\nexport interface State { }\n\nexport default class TitleComponent extends Component<Props, State> {\n  render () {\n    return (\n      <View style={[styles.container, this.props.styleContainer]}>\n        <Text\n          lightColor={Colors.light.tint}\n          darkColor={Colors.dark.tint}\n          style={[styles.textTitlePrimary]}\n        >\n          <Text\n            lightColor={Colors.light.text}\n            darkColor={Colors.dark.text}\n            style={[styles.textTitle]}\n          >\n            {this.props.title}\n          </Text>\n          {this.props.titlePrimary ? this.props.titlePrimary : ''}\n        </Text>\n        {\n          (this.props.description) && (\n            <Text\n              lightColor={Colors.light.text}\n              darkColor={Colors.dark.text}\n              style={[styles.textDescription]}\n            >\n              {this.props.description}\n            </Text>\n          )\n        }\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  textTitle: {\n    fontSize: 32,\n    fontFamily: 'OpenSans-Regular'\n  },\n  textTitlePrimary: {\n    fontSize: 32,\n    fontFamily: 'OpenSans-Regular'\n  },\n  textDescription: {\n    paddingTop: 8,\n    fontSize: 18,\n    fontFamily: 'OpenSans-Regular'\n  }\n})\n","import React, { Component } from 'react'\nimport { StyleSheet, TouchableWithoutFeedback } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View } from './Themed'\n\nexport interface Props { \n  title: string\n  handleOnPress: object\n  styleContainer?: object\n}\nexport interface State {\n  width: number\n  height: number\n}\n\nexport default class ButtonComponent extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0\n    }\n  }\n\n  render() {\n    return (\n      <TouchableWithoutFeedback\n        onPress={()=> {\n          if(typeof this.props.handleOnPress === 'function' ) this.props.handleOnPress()\n        }}>\n        <View\n          darkColor={Colors.dark.tint}\n          lightColor={Colors.light.tint}\n          style={[styles.container, {paddingHorizontal: this.state.width ? this.state.width * 0.35 : undefined}, this.props.styleContainer]}\n          onLayout={(event) => {\n            var {width, height} = event.nativeEvent.layout;\n            if (!this.state.width) this.setState({width, height})\n          }}\n        >\n          <Text\n            darkColor={Colors.light.text}\n            lightColor={Colors.dark.text}\n            style={styles.text}\n          >\n              {this.props.title}\n            </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 56,\n    justifyContent: 'center',\n    alignContent: 'center',\n    textAlign: 'center',\n    borderRadius: 4\n  },\n  text: {\n    fontSize: 12,\n    fontFamily: 'OpenSans-Bold'\n  }\n})\n","import React, { Component } from 'react'\nimport { StyleSheet, TouchableWithoutFeedback } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View, PickerSelect } from './Themed'\n\nexport interface Props {\n  items: object\n  handleOnValueChange: object\n  styleContainer?: object\n  value?: number\n}\nexport interface State {\n  width: number\n  height: number\n}\nexport default class PickerComponent extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0\n    }\n  }\n\n  render() {\n    return (\n      <View\n        darkColor={Colors.dark.background}\n        lightColor={Colors.light.background}\n        style={[styles.container, { paddingHorizontal: this.state.width ? this.state.width * 0.05 : undefined }, this.props.styleContainer]}\n        onLayout={(event) => {\n          var { width, height } = event.nativeEvent.layout;\n          if (!this.state.width) this.setState({ width, height })\n        }}\n      >\n        <PickerSelect\n          onValueChange={(value) => {\n            if (typeof this.props.handleOnValueChange === 'function') this.props.handleOnValueChange(value)\n          }}\n          value={this.props.value}\n          items={this.props.items}\n          darkColor={Colors.dark.background}\n          lightColor={Colors.light.background}\n          style={{\n            inputAndroidContainer: {\n              height: this.state.height ? this.state.height * 0.90 : undefined,\n              width: this.state.width ? this.state.width * 0.90 : undefined,\n              justifyContent: 'center',\n              alignContent: 'center'\n            },\n            inputAndroid: {\n              height: this.state.height ? this.state.height * 0.90 : undefined,\n              width: this.state.width ? this.state.width * 0.90 : undefined,\n              ...styles.text\n            },\n            inputIOSContainer: {\n              height: this.state.height ? this.state.height * 0.90 : undefined,\n              width: this.state.width ? this.state.width * 0.90 : undefined,\n              justifyContent: 'center',\n              alignContent: 'center',\n            },\n            inputIOS: {\n              height: this.state.height ? this.state.height * 0.90 : undefined,\n              width: this.state.width ? this.state.width * 0.90 : undefined,\n              ...styles.text\n            },\n            inputWeb: {\n              height: this.state.height ? this.state.height * 0.90 : undefined,\n              width: this.state.width ? this.state.width * 0.90 : undefined,\n              borderWidth: 0,\n              ...styles.text\n            }\n          }}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 56,\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderWidth: 1,\n    borderRadius: 4,\n    borderColor: Colors.light.borderColor\n  },\n  text: {\n    fontSize: 18,\n    fontFamily: 'OpenSans-Regular'\n  }\n})\n","import React, { Component } from 'react'\nimport { StyleSheet, TouchableWithoutFeedback } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View, TextInput } from './Themed'\n\nexport interface Props {\n  handleOnChangeText: object\n  placeholder?: string\n  value?: string\n  styleContainer?: object\n  keyboardType?: string\n}\nexport interface State {\n  width: number\n  height: number\n}\n\nexport default class TextInputComponent extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0\n    }\n  }\n\n  render() {\n    return (\n      <View\n        darkColor={Colors.dark.background}\n        lightColor={Colors.light.background}\n        style={[styles.container, this.props.styleContainer]}\n        onLayout={(event) => {\n          var { width, height } = event.nativeEvent.layout;\n          if (!this.state.width) this.setState({ width, height })\n        }}\n      >\n        <TextInput\n          placeholder={this.props.placeholder}\n          keyboardType={this.props.keyboardType || 'default'}\n          value={this.props.value}\n          style={{ flex: 1, position: 'relative', paddingHorizontal: this.state.width ? this.state.width * 0.05 : undefined }}\n          onChangeText={(text) => {\n            if (typeof this.props.handleOnChangeText === 'function') this.props.handleOnChangeText(text)\n          }}\n        />\n        {\n          (this.props.value) ? (\n            <Text style={[styles.text, { paddingHorizontal: this.state.width ? this.state.width * 0.05 : undefined }]}>\n              {this.props.placeholder}\n            </Text>\n          ) : (\n            <View />\n          )\n        }\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: 56,\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderWidth: 1,\n    borderRadius: 4,\n    borderColor: Colors.light.borderColor\n  },\n  text: {\n    position: 'absolute',\n    fontSize: 12,\n    fontFamily: 'OpenSans-Regular',\n    top: 0,\n    left: 0\n  }\n})\n","import React, { Component } from 'react'\nimport { StyleSheet, TouchableOpacity } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View } from './Themed'\n\nexport interface Props {\n  title: string\n  styleContainer?: object\n}\nexport interface State { }\n\nexport default class TitleSectionComponent extends Component<Props, State> {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.textTitle}>\n          {this.props.title}\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  textTitle: {\n    fontSize: 24,\n    fontFamily: 'OpenSans-Regular'\n  },\n})\n","import React, { Component } from 'react'\nimport { Linking, StyleSheet, TouchableWithoutFeedback } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View } from './Themed'\n\n\nexport interface Props {\n  title: string\n  handleOnPress: object\n  value?: boolean\n  styleContainer?: object\n}\nexport interface State {\n  width: number\n  height: number\n}\n\nexport default class RadioFormComponent extends Component<Props, State> {\n  render() {\n    return (\n      <View style={[styles.container, this.props.styleContainer]}>\n        <TouchableWithoutFeedback onPress={() => {\n          if (typeof this.props.handleOnPress === 'function') this.props.handleOnPress()\n        }}>\n          <View style={[styles.radioButton, { borderColor: Colors.light.tint }]}>\n            <View style={this.props.value ? [styles.radioButtonActive, { backgroundColor: Colors.light.tint }] : undefined} />\n          </View>\n        </TouchableWithoutFeedback>\n        <Text style={styles.text}>\n          {this.props.title}\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    height: 56\n  },\n  radioButton: {\n    width: 20,\n    height: 20,\n    borderWidth: 1,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  radioButtonActive: {\n    width: 15,\n    height: 15,\n    borderRadius: 15\n  },\n  text: {\n    marginLeft: 10,\n    fontSize: 12,\n    fontFamily: 'OpenSans-Regular',\n  },\n  textLink: {\n    fontSize: 12,\n    fontFamily: 'OpenSans-Regular',\n    textDecorationLine: 'underline'\n  }\n})\n","import React, { Component } from 'react'\nimport { StyleSheet, ScrollView } from 'react-native'\nimport { StackScreenProps } from '@react-navigation/stack';\nimport EditScreenInfo from '../components/EditScreenInfo'\nimport { Text, View, TextInput, PickerSelect, StatusBar } from '../components/Themed'\nimport TitleComponent from \"../components/TitleComponent\";\nimport ButtonComponent from \"../components/ButtonComponent\";\nimport PickerComponent from \"../components/PickerComponent\";\nimport TextInputComponent from \"../components/TextInputComponent\";\nimport SwitchItemComponent from \"../components/SwitchItemComponent\";\nimport TitleSectionComponent from \"../components/TitleSectionComponent\";\nimport RadioButtonComponent from \"../components/RadioFormComponent\";\nimport { BottomTabParamList } from '../../types';\n\ninterface Form {\n  type?: number\n  document?: number\n  firstName?: string\n  lastName?: string\n  thirdName?: string\n  date?: string\n  gender?: number\n  secure?: number\n}\n\nexport interface Props {\n  navigation: StackScreenProps<BottomTabParamList, 'TabHome'>\n}\nexport interface State {\n  width: number\n  height: number\n  form: Form\n}\n\nexport default class TabOneScreen extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0,\n      form: {\n        type: 2,\n        document: undefined,\n        firstName: undefined,\n        lastName: undefined,\n        thirdName: undefined,\n        date: undefined,\n        gender: undefined,\n        secure: undefined,\n      },\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[styles.container]}\n        onLayout={(event) => {\n          var { width, height } = event.nativeEvent.layout;\n          if (!this.state.width) this.setState({ width, height })\n        }}\n      >\n        <ScrollView\n          style={{ paddingHorizontal: this.state.width ? this.state.width * 0.05 : 0, paddingVertical: 40 }}\n        >\n          <TitleComponent\n            title='Hola, '\n            titlePrimary='Pepito'\n            description='Valida que los datos sean correctos'\n          />\n          <View style={styles.rowWrapper}>\n            <TitleSectionComponent\n              title='Datos personales del titular'\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <PickerComponent\n              key='type'\n              styleContainer={{ width: 100 }}\n              handleOnValueChange={(value: number) => {\n                let form = this.state.form\n                form.type = value\n                this.setState({ form })\n              }}\n              value={this.state.form.type}\n              items={[\n                { label: 'DNI', value: 2 },\n              ]}\n            />\n            <TextInputComponent\n              key='document'\n              placeholder='Nro de Documento'\n              keyboardType='numeric'\n              value={this.state.form.document?.toString()}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                let filter = text.toString().match(/^[0-9]{0,8}/)\n                if (filter) {\n                  form.document = filter\n                  this.setState({ form })\n                }\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TextInputComponent\n              placeholder='Nombres'\n              value={this.state.form.firstName}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                form.firstName = text\n                this.setState({ form })\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TextInputComponent\n              placeholder='Apellido Paterno'\n              value={this.state.form.lastName}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                form.lastName = text\n                this.setState({ form })\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TextInputComponent\n              placeholder='Apellido Materno'\n              value={this.state.form.thirdName}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                form.thirdName = text\n                this.setState({ form })\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TextInputComponent\n              key='date'\n              placeholder='Fecha de nacimiento'\n              value={this.state.form.date}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                if (text.length <= 10) {\n                  if (/^[0-9]{4}/.test(text)) {\n                    form.date = text.replace(/(\\d)(?=(\\d{2})+(?!\\d))/g, \"$1/\")\n                    this.setState({ form })\n                  } else if (/^[0-9]{2}\\/[0-9]{6}/.test(text)) {\n                    form.date = text.replace(/(\\d)(?=(\\d{4})+(?!\\d))/g, \"$1/\")\n                    this.setState({ form })\n                  } else {\n                    form.date = text\n                    this.setState({ form })\n                  }\n                }\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TitleSectionComponent\n              title='Género'\n            />\n          </View>\n          <View style={styles.columnWrapper}>\n            <RadioButtonComponent\n              title='Masculino'\n              value={this.state.form.gender === 0}\n              handleOnPress={() => {\n                let form = this.state.form\n                form.gender = 0\n                this.setState({ form })\n              }}\n            />\n            <RadioButtonComponent\n              title='Femenino'\n              value={this.state.form.gender === 1}\n              handleOnPress={() => {\n                let form = this.state.form\n                form.gender = 1\n                this.setState({ form })\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TitleSectionComponent\n              title='¿A quién vamos a asegurar?'\n            />\n          </View>\n          <View style={styles.columnWrapper}>\n            <View>\n              <RadioButtonComponent\n                title='Solo a mí'\n                value={this.state.form.secure === 0}\n                handleOnPress={() => {\n                  let form = this.state.form\n                  form.secure = 0\n                  this.setState({ form })\n                }}\n              />\n            </View>\n            <View>\n              <RadioButtonComponent\n                title='A mí y a mi familia'\n                value={this.state.form.secure === 1}\n                handleOnPress={() => {\n                  let form = this.state.form\n                  form.secure = 1\n                  this.setState({ form })\n                }}\n              />\n            </View>\n          </View>\n        </ScrollView>\n        <View style={[styles.ButtonComponentWrapper, { paddingHorizontal: this.state.width ? this.state.width * 0.05 : undefined }]}>\n          <ButtonComponent\n            title='CONTINUAR'\n            handleOnPress={() => {\n              this.props.navigation.navigate('TabTwo');\n            }}\n          />\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  ButtonComponentWrapper: {\n    alignSelf: 'flex-start'\n  },\n  rowWrapper: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingTop: 16\n  },\n  columnWrapper: {\n    flexDirection: 'column',\n    paddingTop: 16\n  }\n})\n","import * as React from 'react';\n\nimport { Text, TextProps } from './Themed';\n\nexport function MonoText(props: TextProps) {\n  return <Text {...props} style={[props.style, { fontFamily: 'OpenSans-Regular' }]} />;\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react'\nimport { StyleSheet } from 'react-native'\n\nimport EditScreenInfo from '../components/EditScreenInfo'\nimport { Text, View } from '../components/Themed'\n\nexport default function TabTwoScreen () {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab Two</Text>\n      <View style={styles.separator} lightColor='#eee' darkColor='rgba(255,255,255,0.1)' />\n      <EditScreenInfo path='/screens/TabTwoScreen.tsx' />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n})\n","import * as React from 'react'\nimport { StyleSheet } from 'react-native'\n\nimport EditScreenInfo from '../components/EditScreenInfo'\nimport { Text, View } from '../components/Themed'\n\nexport default function TabSuccessScreen () {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab Success</Text>\n      <View style={styles.separator} lightColor='#eee' darkColor='rgba(255,255,255,0.1)' />\n      <EditScreenInfo path='/screens/TabSuccessScreen.tsx' />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n})\n","import React, { Component } from 'react'\nimport { Linking, StyleSheet, TouchableWithoutFeedback } from 'react-native'\n\nimport Colors from '../constants/Colors'\nimport { MonoText } from './StyledText'\nimport { Text, View, Switch } from './Themed'\n\ninterface dataItem {\n  title: string\n  link?: string\n}\n\nexport interface Props {\n  title: string\n  handleOnValueChange: object\n  value?: boolean\n  styleContainer?: object\n  data?: Array<dataItem>\n}\nexport interface State {\n  width: number\n  height: number\n}\n\nexport default class SwitchItemComponent extends Component<Props, State> {\n  render() {\n    return (\n      <View style={[styles.container, this.props.styleContainer]}>\n        <Switch\n          style={styles.switch}\n          value={this.props.value}\n          onValueChange={(value) => {\n            if (typeof this.props.handleOnValueChange === 'function') this.props.handleOnValueChange(value)\n          }}\n        />\n        <Text style={styles.text}>\n          {this.props.title}\n          {\n            (this.props.data) ? (\n              this.props.data.map((item, index) => {\n                if (item.link) {\n                  return (\n                    <TouchableWithoutFeedback key={`data_${index}`} onPress={() => Linking.openURL(item.link || '')}>\n                      <Text style={styles.textLink}>\n                        {item.title}\n                      </Text>\n                    </TouchableWithoutFeedback>\n                  )\n                } else {\n                  return (\n                    <Text key={`data_${index}`} style={styles.text}>\n                      {item.title}\n                    </Text>\n                  )\n                }\n              })\n            ) : (\n                null\n              )\n          }\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    height: 56\n  },\n  switch:{\n\n  },\n  text: {\n    marginLeft: 10,\n    fontSize: 12,\n    fontFamily: 'OpenSans-Regular',\n  },\n  textLink: {\n    fontSize: 12,\n    fontFamily: 'OpenSans-Regular',\n    textDecorationLine: 'underline'\n  }\n})\n","import React, { Component } from 'react'\nimport { StyleSheet, ScrollView } from 'react-native'\nimport { StackScreenProps } from '@react-navigation/stack';\nimport EditScreenInfo from '../components/EditScreenInfo'\nimport { Text, View, TextInput, PickerSelect, StatusBar } from '../components/Themed'\nimport TitleComponent from \"../components/TitleComponent\";\nimport ButtonComponent from \"../components/ButtonComponent\";\nimport PickerComponent from \"../components/PickerComponent\";\nimport TextInputComponent from \"../components/TextInputComponent\";\nimport SwitchItemComponent from \"../components/SwitchItemComponent\";\nimport { BottomTabParamList } from '../../types';\n\ninterface Form {\n  type?: number\n  document?: number\n  date?: string\n  phone?: number\n  politic?: boolean\n  message?: boolean\n}\n\nexport interface Props {\n  navigation: StackScreenProps<BottomTabParamList, 'TabHome'>\n}\nexport interface State {\n  width: number\n  height: number\n  form: Form\n}\nexport default class TabHomeScreen extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0,\n      form: {\n        type: 2,\n        document: undefined,\n        date: '',\n        phone: undefined,\n        politic: false,\n        message: false\n      },\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[styles.container]}\n        onLayout={(event) => {\n          var { width, height } = event.nativeEvent.layout;\n          if (!this.state.width) this.setState({ width, height })\n        }}\n      >\n        <StatusBar translucent={true} />\n        <ScrollView\n          style={{ flex: 1, paddingHorizontal: this.state.width ? this.state.width * 0.05 : undefined, paddingVertical: 40 }}\n        >\n          <TitleComponent\n            title='Obtén tu '\n            titlePrimary='seguro ahora'\n            description='Ingresa los datos para comenzar'\n          />\n          <View style={styles.rowWrapper}>\n            <PickerComponent\n              key='type'\n              styleContainer={{ width: 100 }}\n              handleOnValueChange={(value: number) => {\n                let form = this.state.form\n                form.type = value\n                this.setState({ form })\n              }}\n              value={this.state.form.type}\n              items={[\n                { label: 'DNI', value: 2 },\n              ]}\n            />\n            <TextInputComponent\n              key='document'\n              placeholder='Nro de Documento'\n              keyboardType='numeric'\n              value={this.state.form.document?.toString()}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                let filter = text.toString().match(/^[0-9]{0,8}/)\n                if (filter) {\n                  form.document = filter\n                  this.setState({ form })\n                }\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TextInputComponent\n              key='date'\n              placeholder='Fecha de nacimiento'\n              value={this.state.form.date}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                if (text.length <= 10) {\n                  if (/^[0-9]{4}/.test(text)) {\n                    form.date = text.replace(/(\\d)(?=(\\d{2})+(?!\\d))/g, \"$1/\")\n                    this.setState({ form })\n                  } else if (/^[0-9]{2}\\/[0-9]{6}/.test(text)) {\n                    form.date = text.replace(/(\\d)(?=(\\d{4})+(?!\\d))/g, \"$1/\")\n                    this.setState({ form })\n                  } else {\n                    form.date = text\n                    this.setState({ form })\n                  }\n                }\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <TextInputComponent\n              placeholder='Celular'\n              value={this.state.form.phone?.toString()}\n              handleOnChangeText={(text: string) => {\n                let form = this.state.form\n                let filter = text.toString().match(/^[0-9]{0,9}/)\n                if (filter) {\n                  form.phone = filter\n                  this.setState({ form })\n                }\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <SwitchItemComponent\n              title='Acepto la '\n              data={[\n                {\n                  link: 'https://www.linkedin.com/in/binni-zenobio-cordova-leandro-a77000175/',\n                  title: 'Política de Protección de Datos Personales y los Términos y Condiciones.'\n                }\n              ]}\n              value={this.state.form.politic}\n              handleOnValueChange={(value: boolean) => {\n                let form = this.state.form\n                form.politic = value\n                this.setState({ form })\n              }}\n            />\n          </View>\n          <View style={styles.rowWrapper}>\n            <SwitchItemComponent\n              title='Acepto la '\n              data={[\n                {\n                  link: 'https://www.linkedin.com/in/binni-zenobio-cordova-leandro-a77000175/',\n                  title: 'Política de Envío de Comunicaciones Comerciales.'\n                }\n              ]}\n              value={this.state.form.message}\n              handleOnValueChange={(value: boolean) => {\n                let form = this.state.form\n                form.message = value\n                this.setState({ form })\n              }}\n            />\n          </View>\n        </ScrollView>\n        <View style={[styles.ButtonComponentWrapper, { paddingHorizontal: this.state.width ? this.state.width * 0.05 : undefined }]}>\n          <ButtonComponent\n            title='COMENCEMOS'\n            handleOnPress={() => {\n              this.props.navigation.navigate('TabOne');\n            }}\n          />\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  ButtonComponentWrapper: {\n    alignSelf: 'flex-start'\n  },\n  rowWrapper: {\n    flexDirection: 'row',\n    paddingTop: 16\n  }\n})\n","import { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport TabSuccessScreen from '../screens/TabSuccessScreen';\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\nimport { BottomTabParamList, TabHomeParamList, TabOneParamList, TabTwoParamList, TabSuccessParamList } from '../../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabHome\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}\n    >\n      <BottomTab.Screen\n        name=\"TabHome\"\n        component={TabHomeNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabSuccess\"\n        component={TabSuccessNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: string; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabHomeStack = createStackNavigator<TabHomeParamList>();\n\nfunction TabHomeNavigator() {\n  return (\n    <TabHomeStack.Navigator screenOptions={{ headerShown: false, headerTransparent: true }}>\n      <TabHomeStack.Screen\n        name=\"TabHomeScreen\"\n        component={TabHomeScreen}\n        options={{ headerTitle: 'Tab Home Title' }}\n      />\n    </TabHomeStack.Navigator>\n  );\n}\n\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction TabOneNavigator() {\n  return (\n    <TabOneStack.Navigator screenOptions={{ headerShown: false, headerTransparent: true }}>\n      <TabOneStack.Screen\n        name=\"TabOneScreen\"\n        component={TabOneScreen}\n        options={{ headerTitle: 'Tab One Title' }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction TabTwoNavigator() {\n  return (\n    <TabTwoStack.Navigator screenOptions={{ headerShown: false, headerTransparent: true }}>\n      <TabTwoStack.Screen\n        name=\"TabTwoScreen\"\n        component={TabTwoScreen}\n        options={{ headerTitle: 'Tab Two Title' }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n\nconst TabSuccessStack = createStackNavigator<TabSuccessParamList>();\n\nfunction TabSuccessNavigator() {\n  return (\n    <TabSuccessStack.Navigator screenOptions={{ headerShown: false, headerTransparent: true }}>\n      <TabSuccessStack.Screen\n        name=\"TabSuccessScreen\"\n        component={TabSuccessScreen}\n        options={{ headerTitle: 'Tab Success Title' }}\n      />\n    </TabSuccessStack.Navigator>\n  );\n}","import * as Linking from 'expo-linking'\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabHome: {\n            screens: {\n              TabHomeScreen: 'home'\n            }\n          },\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one'\n            }\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two'\n            }\n          },\n          TabSuccess: {\n            screens: {\n              TabSuccessScreen: 'success'\n            }\n          }\n        }\n      },\n      NotFound: '*'\n    }\n  }\n}\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { StatusBar } from 'expo-status-bar'\nimport React, { useState } from 'react'\nimport { View, StyleSheet, Text, Platform } from \"react-native\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\n\nimport useCachedResources from './src/hooks/useCachedResources'\nimport useColorScheme from './src/hooks/useColorScheme'\nimport Navigation from './src/navigation'\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources()\n  const colorScheme = useColorScheme()\n\n  const [containerWidth, setContainerWidth] = useState(0)\n\n  if (!isLoadingComplete) {\n    return null\n  } else {\n    return (\n      <View\n        style={styles.container}\n        onLayout={(event) => {\n          var { width } = event.nativeEvent.layout;\n          if (!containerWidth) setContainerWidth(width)\n        }}\n      >\n        {\n          (!(Platform.OS === 'android' || Platform.OS === 'ios')) ? (\n            <View style={{ flex: 1, backgroundColor: 'blue' }}>\n              <Text>hellow</Text>\n            </View>\n          ) : (\n              null\n            )\n        }\n        <SafeAreaProvider style={(Platform.OS === 'android' || Platform.OS === 'ios') ? { flex: 1 } : { maxWidth: 640 }}>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n})","import { Ionicons } from '@expo/vector-icons'\nimport * as Font from 'expo-font'\nimport * as SplashScreen from 'expo-splash-screen'\nimport * as React from 'react'\n\nexport default function useCachedResources () {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false)\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync () {\n      try {\n        SplashScreen.preventAutoHideAsync()\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'OpenSans-Bold': require('../../assets/fonts/OpenSans-Bold.ttf'),\n          'OpenSans-BoldItalic': require('../../assets/fonts/OpenSans-BoldItalic.ttf'),\n          'OpenSans-ExtraBold': require('../../assets/fonts/OpenSans-ExtraBold.ttf'),\n          'OpenSans-ExtraBoldItalic': require('../../assets/fonts/OpenSans-ExtraBoldItalic.ttf'),\n          'OpenSans-Italic': require('../../assets/fonts/OpenSans-Italic.ttf'),\n          'OpenSans-Light': require('../../assets/fonts/OpenSans-Light.ttf'),\n          'OpenSans-LightItalic': require('../../assets/fonts/OpenSans-LightItalic.ttf'),\n          'OpenSans-Regular': require('../../assets/fonts/OpenSans-Regular.ttf'),\n          'OpenSans-Semibold': require('../../assets/fonts/OpenSans-Semibold.ttf'),\n          'OpenSans-SemiboldItalic': require('../../assets/fonts/OpenSans-SemiboldItalic.ttf')\n        })\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e)\n      } finally {\n        setLoadingComplete(true)\n        SplashScreen.hideAsync()\n      }\n    }\n\n    loadResourcesAndDataAsync()\n  }, [])\n\n  return isLoadingComplete\n}\n","// useColorScheme from react-native does not support web currently. You can replace\n// this with react-native-appearance if you would like theme support on web.\nexport default function useColorScheme () {\n  return 'light'\n}\n","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-BoldItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-ExtraBold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-ExtraBoldItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Italic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-LightItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Semibold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-SemiboldItalic.ttf\";"],"sourceRoot":""}